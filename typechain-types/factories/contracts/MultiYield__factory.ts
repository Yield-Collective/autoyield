/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MultiYield,
  MultiYieldInterface,
} from "../../contracts/MultiYield";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAutoYield",
        name: "compoundor_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "compoundor",
    outputs: [
      {
        internalType: "contract IAutoYield",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "runConv0NoSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "runConv0Swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "runConv1NoSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "runConv1Swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161064538038061064583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6105b2806100936000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063384529671461005c5780634d39a02b1461007157806357f8c4d6146100a0578063625921f4146100b3578063c5de42bc146100c6575b600080fd5b61006f61006a366004610443565b6100d9565b005b600054610084906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006f6100ae366004610443565b6101b8565b61006f6100c1366004610443565b610291565b61006f6100d4366004610443565b61036a565b8060005b818110156101b25760005460408051608081019091526001600160a01b03909116906318f3fd4d9080878786818110610118576101186104b8565b602090810292909201358352500160018152600060208201819052604091820152516001600160e01b031960e084901b16815261015891906004016104ce565b6080604051808303816000875af1158015610177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019b919061051f565b5050505080806101aa90610555565b9150506100dd565b50505050565b8060005b818110156101b25760005460408051608081019091526001600160a01b03909116906318f3fd4d90808787868181106101f7576101f76104b8565b602090810292909201358352500160028152600060208201526001604091820152516001600160e01b031960e084901b16815261023791906004016104ce565b6080604051808303816000875af1158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a919061051f565b50505050808061028990610555565b9150506101bc565b8060005b818110156101b25760005460408051608081019091526001600160a01b03909116906318f3fd4d90808787868181106102d0576102d06104b8565b602090810292909201358352500160028152600060208201819052604091820152516001600160e01b031960e084901b16815261031091906004016104ce565b6080604051808303816000875af115801561032f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610353919061051f565b50505050808061036290610555565b915050610295565b8060005b818110156101b25760005460408051608081019091526001600160a01b03909116906318f3fd4d90808787868181106103a9576103a96104b8565b602090810292909201358352500160018152600060208201526001604091820152516001600160e01b031960e084901b1681526103e991906004016104ce565b6080604051808303816000875af1158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c919061051f565b50505050808061043b90610555565b91505061036e565b6000806020838503121561045657600080fd5b823567ffffffffffffffff8082111561046e57600080fd5b818501915085601f83011261048257600080fd5b81358181111561049157600080fd5b8660208260051b85010111156104a657600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052603260045260246000fd5b8151815260208201516080820190600381106104fa57634e487b7160e01b600052602160045260246000fd5b8060208401525060408301511515604083015260608301511515606083015292915050565b6000806000806080858703121561053557600080fd5b505082516020840151604085015160609095015191969095509092509050565b60006001820161057557634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122007c6cfac9f7cf89644d63046d97f6f483d52ce0f67793a0c7a874fcb249b650764736f6c63430008140033";

type MultiYieldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiYieldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiYield__factory extends ContractFactory {
  constructor(...args: MultiYieldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    compoundor_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(compoundor_, overrides || {});
  }
  override deploy(
    compoundor_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(compoundor_, overrides || {}) as Promise<
      MultiYield & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MultiYield__factory {
    return super.connect(runner) as MultiYield__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiYieldInterface {
    return new Interface(_abi) as MultiYieldInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MultiYield {
    return new Contract(address, _abi, runner) as unknown as MultiYield;
  }
}
